//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaContext {

    public MetaEntity loadServiceEntity { get { return GetGroup(MetaMatcher.LoadService).GetSingleEntity(); } }
    public LoadServiceComponent loadService { get { return loadServiceEntity.loadService; } }
    public bool hasLoadService { get { return loadServiceEntity != null; } }

    public MetaEntity SetLoadService(DrebotGS.Services.ILoadService newInstance) {
        if (hasLoadService) {
            throw new Entitas.EntitasException("Could not set LoadService!\n" + this + " already has an entity with LoadServiceComponent!",
                "You should check if the context already has a loadServiceEntity before setting it or use context.ReplaceLoadService().");
        }
        var entity = CreateEntity();
        entity.AddLoadService(newInstance);
        return entity;
    }

    public void ReplaceLoadService(DrebotGS.Services.ILoadService newInstance) {
        var entity = loadServiceEntity;
        if (entity == null) {
            entity = SetLoadService(newInstance);
        } else {
            entity.ReplaceLoadService(newInstance);
        }
    }

    public void RemoveLoadService() {
        loadServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaEntity {

    public LoadServiceComponent loadService { get { return (LoadServiceComponent)GetComponent(MetaComponentsLookup.LoadService); } }
    public bool hasLoadService { get { return HasComponent(MetaComponentsLookup.LoadService); } }

    public void AddLoadService(DrebotGS.Services.ILoadService newInstance) {
        var index = MetaComponentsLookup.LoadService;
        var component = (LoadServiceComponent)CreateComponent(index, typeof(LoadServiceComponent));
        component.instance = newInstance;
        AddComponent(index, component);
    }

    public void ReplaceLoadService(DrebotGS.Services.ILoadService newInstance) {
        var index = MetaComponentsLookup.LoadService;
        var component = (LoadServiceComponent)CreateComponent(index, typeof(LoadServiceComponent));
        component.instance = newInstance;
        ReplaceComponent(index, component);
    }

    public void RemoveLoadService() {
        RemoveComponent(MetaComponentsLookup.LoadService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MetaMatcher {

    static Entitas.IMatcher<MetaEntity> _matcherLoadService;

    public static Entitas.IMatcher<MetaEntity> LoadService {
        get {
            if (_matcherLoadService == null) {
                var matcher = (Entitas.Matcher<MetaEntity>)Entitas.Matcher<MetaEntity>.AllOf(MetaComponentsLookup.LoadService);
                matcher.componentNames = MetaComponentsLookup.componentNames;
                _matcherLoadService = matcher;
            }

            return _matcherLoadService;
        }
    }
}
